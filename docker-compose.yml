services:
  app:
    build: .
    container_name: resume_app
    env_file:
      - .env
    expose:
      - "8000"
    depends_on:
      - db
    networks:
      - app_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: postgres:16
    container_name: resume_db
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - app_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:alpine
    container_name: resume_nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/www/certbot
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - app
    networks:
      - app_net

  certbot:
    image: certbot/certbot
    container_name: resume_certbot
    command: ["sh", "-c", "trap : TERM; while :; do sleep 3600; done"]
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/www/certbot

volumes:
  db_data:
  certbot-etc:
  certbot-var:

networks:
  app_net: